
dependencies{
	compile 'com.ai:ipaas-common:1.0'
	compile 'org.mongodb:mongodb-driver:3.10.2'
	// https://mvnrepository.com/artifact/com.google.code.gson/gson
	compile group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
}


jar {
	baseName moduleName
	version moduleVersion
	manifest {
		attributes 'packageName': moduleName, 'Built-By': builtBy,'create-date': new Date().format('yyyy-MM-dd HH:mm:ss')
	}
}




publishing {
	publications {
		publishing.publications.create("${moduleName}", MavenPublication) {
			groupId group
			artifactId moduleName
			version moduleVersion
			artifact  jar

			artifact (sourcesJar) { classifier "sources" }

			pom.withXml {
				//Creating additional node for dependencies
				def dependenciesNode = asNode().appendNode('dependencies')

				//Defining configuration names from which dependencies will be taken (debugCompile or releaseCompile and compile)
				def configurationNames = ['compile']

				configurationNames.each { configurationName ->
					configurations[configurationName].allDependencies.each {
						if (it.group != null && it.name != null) {
							def dependencyNode = dependenciesNode.appendNode('dependency')
							dependencyNode.appendNode('groupId', it.group)
							dependencyNode.appendNode('artifactId', it.name)
							dependencyNode.appendNode('version', it.version)

							//If there are any exclusions in dependency
							if (it.excludeRules.size() > 0) {
								def exclusionsNode = dependencyNode.appendNode('exclusions')
								it.excludeRules.each { rule ->
									def exclusionNode = exclusionsNode.appendNode('exclusion')
									exclusionNode.appendNode('groupId', rule.group)
									exclusionNode.appendNode('artifactId', rule.module)
								}
							}
						}
					}
				}
			}
		}
	}
	repositories {
		maven {
			credentials {
				username = repoUser
				password = repoPassword
			}
			if(moduleVersion.endsWith('-SNAPSHOT')) {
				url publishSnapShotsURL
			} else {
				url publishReleaseURL
			}
		}
	}
}

